/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package rentvideopj;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author gagag
 */
public class Member extends javax.swing.JFrame {

    /**
     * Creates new form Customer
     */
    public Member() {
        initComponents();
        scanSQL();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDOB = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMember = new javax.swing.JTable();
        btnChange = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        btnRegister = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Customer");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("ID:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Day Of Birth:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Address:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Phonenumber:");

        tblMember.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "DOB", "Phone", "Address", "DateCreated", "Status", "isActive"
            }
        ));
        tblMember.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMemberMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMember);

        btnChange.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnChange.setText("Change");
        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });

        btnDel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnDel.setText("Delete");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Name:");

        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIDKeyTyped(evt);
            }
        });

        btnRegister.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(btnRegister)
                .addGap(30, 30, 30)
                .addComponent(btnChange)
                .addGap(62, 62, 62)
                .addComponent(btnDel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(194, 194, 194))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 973, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(257, 257, 257)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtName)
                            .addComponent(txtDOB)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(53, 53, 53)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtAddress)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(txtDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChange)
                    .addComponent(btnDel)
                    .addComponent(btnRegister)
                    .addComponent(btnBack))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        // TODO add your handling code here:
        try {
            DefaultTableModel tableModel = (DefaultTableModel) tblMember.getModel();
            DBAccess acc = new DBAccess();
            ResultSet rs = acc.Query("select* from Customers");
            int seletedRow = tblMember.getSelectedRow();
            if (rs.next()) {
                tableModel.removeRow(seletedRow);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Nothing to delete");
        }
        String ID = txtID.getText();
        String name = txtName.getText();
        String doB = txtDOB.getText();
        String phone = txtAddress.getText();
        String addr = txtPhone.getText();
        DBAccess acc = new DBAccess();
        ResultSet rs = acc.Query("UPDATE Customers SET isActive = '0' where ID = '" + ID + "'");
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        new Home().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void tblMemberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMemberMouseClicked
        // TODO add your handling code here:
        int print = tblMember.rowAtPoint(evt.getPoint());
        txtID.setText(tblMember.getValueAt(print, 0).toString());
        txtName.setText(tblMember.getValueAt(print, 1).toString());
        txtDOB.setText(tblMember.getValueAt(print, 2).toString());
        txtPhone.setText(tblMember.getValueAt(print, 3).toString());
        txtAddress.setText(tblMember.getValueAt(print, 4).toString());
    }//GEN-LAST:event_tblMemberMouseClicked

    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed
        // TODO add your handling code here:
        int i = tblMember.getSelectedRow();
        DefaultTableModel tableModel = (DefaultTableModel) tblMember.getModel();
        if (i >= 0) {
            tableModel.setValueAt(txtName.getText(), i, 1);
            tableModel.setValueAt(txtDOB.getText(), i, 2);
            tableModel.setValueAt(txtAddress.getText(), i, 4);
            tableModel.setValueAt(txtPhone.getText(), i, 3);

            try {
                DBAccess acc = new DBAccess();
                String ID = txtID.getText();
                String name = txtName.getText();
                String dob = txtDOB.getText();
                String addr = txtAddress.getText();
                String phone = txtPhone.getText();

                ResultSet rs = acc.Query("UPDATE Customers SET Name = '" + name + "', DOB = '" + dob + "', Address = '" + addr + "', Phone = '" + phone + "' WHERE ID = '" + ID + "'");
                clear();
                scanSQL();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "ERROR");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No Selected Row");
        }

    }//GEN-LAST:event_btnChangeActionPerformed
    int FindMember(String ID) {
        int result = -1;
        for (int i = 0; i < tblMember.getRowCount(); i++) {
            if (tblMember.getValueAt(i, 0).equals(ID)) {
                result = i;
                System.out.print(result);
            }
        }
        return result;
    }
    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel) tblMember.getModel();
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date date = new Date();
        try {

            int result = FindMember(txtID.getText());
            if (txtID.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Member ID cannot be plank");
                txtID.requestFocus();
                return;
            } else if (txtName.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Member Name cannot be plank");
                txtName.requestFocus();
                return;
            } else if (txtPhone.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Phone cannot be plank");
                txtPhone.requestFocus();
                return;
            } else if (txtAddress.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Address cannot be plank");
                txtAddress.requestFocus();
                return;
            } else if (txtDOB.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Date of Birth cannot be plank");
                txtDOB.requestFocus();
                return;
            }
            if (result == -1) {
                String ID = txtID.getText();
                String name = txtName.getText();
                String Phone = txtPhone.getText();
                String addr = txtAddress.getText();
                String dob = txtDOB.getText();
                String currentDate = dateFormat.format(date);
                String Status = "0";
                String isActive = "1";
                String rows[] = {ID, name, dob, Phone, addr, currentDate, Status, isActive};
                tblModel.addRow(rows);
                try {

                    DBAccess acc = new DBAccess();
                    ResultSet rs = acc.Query("Insert into Customers(ID, Name, DOB, Phone, Address, DateCreated, StatusRent, IsActive) values ('"
                            + ID + "', '" + name + "', '" + dob + "', '" + Phone + "', '" + addr + "', '" + currentDate + "', '" + Status + "', '" + isActive + "')");
                    clear();
                    scanSQL();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, ex.toString());
                }
            } else {
                String ID = txtID.getText();
                DBAccess acc = new DBAccess();
                acc.Query("Update Customers set isActive = '1' where ID = '" + ID + "'");
                clear();
                scanSQL();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }


    }//GEN-LAST:event_btnRegisterActionPerformed

    private void txtIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyTyped

        DefaultTableModel tableModel = (DefaultTableModel) tblMember.getModel();
        tableModel.setRowCount(0);
        String ID = txtID.getText();
        try {
            DBAccess acc = new DBAccess();
            ResultSet rs = acc.Query("select* from Customers where ID like '" + ID + "%'");

            while (rs.next()) {
                String id = rs.getString(1);
                String name = rs.getString(2);
                String dob = rs.getString(3);
                String phone = rs.getString(4);
                String addr = rs.getString(5);
                String dateCreate = rs.getString(6);
                String statusRent = rs.getString(7);
                String isActive = rs.getString(8);
                String[] QQ = {id, name, dob, phone, addr, dateCreate, statusRent, isActive};
                tableModel.addRow(QQ);
            }
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_txtIDKeyTyped
    void clear() {
        DefaultTableModel tableModel = (DefaultTableModel) tblMember.getModel();
        tableModel.setNumRows(0);
    }

    private void scanSQL() {
        try {
            DBAccess acc = new DBAccess();
            ResultSet rs = acc.Query("select* from Customers");
            DefaultTableModel tableModel = (DefaultTableModel) tblMember.getModel();
            while (rs.next()) {
                String id = rs.getString(1);
                String name = rs.getString(2);
                String dob = rs.getString(3);
                String phone = rs.getString(4);
                String addr = rs.getString(5);
                String dateCreate = rs.getString(6);
                String statusRent = rs.getString(7);
                String isActive = rs.getString(8);

                String[] QQ = {id, name, dob, phone, addr, dateCreate, statusRent, isActive};
                tableModel.addRow(QQ);

            }
        } catch (Exception ex) {

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Member.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Member.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Member.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Member.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Member().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnRegister;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMember;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtDOB;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
